'Общая диаграмма классов генератора тестов'
@startuml
!include themes.puml
!include forms.puml


class DBConnector <<(S,#FF7700) Singletone>> {
    +getInstance() : DBConnector
    ..
    +getQuestionByID(id : long) : Question
    +findQuestionsByDescription(desc : String) : List<Question>
    +getQuestionsByTheme(themes : List<String>) : List<Question>
    +addQuestion(question : Question, themes : List<String>) : boolean
}

class QuestionGenerator {
    +getRandomQuestionsInTheme(themes : List<String>, quantity : int, variants : int) : List<Question>
}

class QuestionAdder {
    +addQuestion(question : Question, themes : List<String>) : boolean
    -checkQuestion(question : Question) : boolean
}

class LaTeXViewingComponent {
    +paintComponent(graphics : java.awt.Graphics, string : String)
}

class QuestionViewingComponent {
    +paintComponent(graphics : java.awt.Graphics, string : String)
}

class PDFGenerator {
    +generatePDF(questionList : List<Question>) : PDFFile
}

class PDFViewingComponent {
    +paintComponent(graphics : java.awt.Graphics, string : String)
}

QuestionGenerator --> DBConnector

MainForm  o--> AddingForm : create >
AddingForm --> QuestionAdder : use >
QuestionAdder --> QuestionManager : use >

AddingForm o-- QuestionViewingComponent
QuestionViewingComponent o-- LaTeXViewingComponent : include >

MainForm o--> ViewingForm : create >
ViewingForm "1..*" *-- QuestionViewingComponent

MainForm o--> GeneratingForm : create >
GeneratingForm --> QuestionGenerator : use >
GeneratingForm --> PDFGenerator : use >
GeneratingForm o-- PDFViewingComponent
AddingForm ..> Question : create >
QuestionManager --> DBConnector
ViewingForm --> QuestionManager : use >

@enduml
